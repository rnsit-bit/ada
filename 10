#include <stdio.h> 
#include <stdlib.h> 
#include <time.h>
int hoarePartition(int arr[], int l, int r) {
int pivot = arr[l];
int i = l - 1, j = r + 1;
while (1) { 
do {
i++;
} while (arr[i] < pivot);
do {
j--;
} while (arr[j] > pivot);
if (i >= j) 
return j;
int temp = arr[i];
arr[i] = arr[j]; 
arr[j] = temp;
}
}
void quickSort(int arr[], int low, int high) {
if (low < high) {
int pi = hoarePartition(arr, low, high); 
quickSort(arr, low, pi);
quickSort(arr, pi + 1, high);
}
}
int main() { 
int n, i;
clock_t start, end; 
double cpu_time_used;
printf("Enter the number of elements (n): "); 
scanf("%d", &n);
if (n < 5000) {
printf("Please enter a value of n greater than 5000.\n"); 
return 1;
}
int *arr = (int *)malloc(n * sizeof(int)); 
if (arr == NULL) {
printf("Memory allocation failed.\n"); 
return 1;
}
srand(time(NULL));
for (i = 0; i < n; i++) { 
arr[i] = rand() % 10000;
}
start = clock(); 
quickSort(arr, 0, n - 1); 
end = clock();
cpu_time_used = ((double)(end - start));
printf("Time taken for sorting: %lf seconds\n", cpu_time_used);
free(arr); 
return 0;
}
